!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";class t extends AudioProcessor{constructor(t,e){super(t,e),this.bufferSize=11025,this.buffer=new Float32Array(this.bufferSize),this.writePos=0,this.readPos=0,this.pitchRatio=1.5,this.formantRatio=1.2,this.dryWet=.7,this.hpf={prevIn:0,prevOut:0,alpha:.86},this.channels=2,this.frameBuffer=[],this.batchSize=1024,this.port.onmessage=t=>{const{command:e,config:i}=t.data;if("update-pitch-shift-config"===e){const{pitchRatio:t=1.5,formantRatio:e=1.2,dryWet:s=0}=i;this.pitchRatio=t,this.formantRatio=e,this.dryWet=s}}}process(t,e){const i=t[0],s=e[0];if(0===i.length||!i[0])return!0;const h=i[0],r=s[0];for(let t=0;t<h.length;t++)this.buffer[this.writePos]=h[t],this.writePos=(this.writePos+1)%this.bufferSize;for(let t=0;t<r.length;t++){let e=this.readPos%this.bufferSize;e<0&&(e+=this.bufferSize);const i=Math.floor(e),s=e-i,h=(i+1)%this.bufferSize,f=this.buffer[i]*(1-s)+this.buffer[h]*s,o=f-this.hpf.prevIn+this.hpf.alpha*this.hpf.prevOut;this.hpf.prevIn=f,this.hpf.prevOut=o,r[t]=o*this.dryWet+f*(1-this.dryWet),this.readPos+=this.pitchRatio,this.readPos>=this.bufferSize&&(this.readPos-=this.bufferSize,this.writePos=0)}const f=r.length;for(let t=0;t<f;t++){for(let e=0;e<this.channels;e++)this.frameBuffer.push(r[e][t]);if(this.frameBuffer.length>=this.batchSize*this.channels){const t=new Float32Array(this.frameBuffer).buffer;this.port.postMessage({command:"preview",data:t},[t]),this.frameBuffer=[]}}return!0}}registerProcessor("pitch-shift-processor",t)}));
